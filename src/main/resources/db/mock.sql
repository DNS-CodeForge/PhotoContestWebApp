-- Step 1: Drop all relevant tables
DROP TABLE IF EXISTS public.photo_review CASCADE;
DROP TABLE IF EXISTS public.photo_submission CASCADE;
DROP TABLE IF EXISTS public.contest_participants CASCADE;
DROP TABLE IF EXISTS public.contest_jury CASCADE;
DROP TABLE IF EXISTS public.phase CASCADE;
DROP TABLE IF EXISTS public.contest CASCADE;
DROP TABLE IF EXISTS public.user_profile CASCADE;
DROP TABLE IF EXISTS public.user_roles CASCADE;
DROP TABLE IF EXISTS public.roles CASCADE;
DROP TABLE IF EXISTS public.app_user CASCADE;

-- Step 2: Create necessary tables
CREATE TABLE IF NOT EXISTS app_user (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        email VARCHAR(255) NOT NULL UNIQUE,
                                        password VARCHAR(255) NOT NULL,
                                        username VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS roles (
                                     role_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     authority VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS user_roles (
                                          role_id INTEGER NOT NULL
                                              CONSTRAINT fk_user_roles_roles
                                                  REFERENCES roles,
                                          user_id BIGINT NOT NULL
                                              CONSTRAINT fk_user_roles_app_user
                                                  REFERENCES app_user,
                                          PRIMARY KEY (role_id, user_id)
);

CREATE TABLE public.user_profile (
                                     id BIGINT NOT NULL PRIMARY KEY
                                         CONSTRAINT fk_user_profile_app_user
                                             REFERENCES public.app_user (id),
                                     first_name VARCHAR(26),
                                     last_name VARCHAR(26),
                                     rank VARCHAR(255) NOT NULL
                                         CONSTRAINT user_profile_rank_check
                                             CHECK ((rank)::text = ANY
                                                    (ARRAY ['JUNKIE'::text, 'ENTHUSIAST'::text, 'MASTER'::text, 'DICTATOR'::text, 'ORGANIZER'::text])),
                                     points INTEGER DEFAULT 0
);

CREATE TABLE IF NOT EXISTS contest (
                                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       title VARCHAR(255),
                                       category VARCHAR(255),
                                       is_private BOOLEAN NOT NULL DEFAULT FALSE,
                                       organizer_id BIGINT,
                                       created_at TIMESTAMP,
                                       updated_at TIMESTAMP,
                                       start_date TIMESTAMP,
                                       submission_end_date TIMESTAMP,
                                       end_date TIMESTAMP,
                                       FOREIGN KEY (organizer_id) REFERENCES user_profile (id)
);

CREATE TABLE IF NOT EXISTS contest_jury (
                                            app_user_id BIGINT NOT NULL
                                                CONSTRAINT fk_contest_jury_app_user
                                                    REFERENCES app_user,
                                            contest_id BIGINT NOT NULL
                                                CONSTRAINT fk_contest_jury_contest
                                                    REFERENCES contest ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS contest_participants (
                                                    app_user_id BIGINT NOT NULL
                                                        CONSTRAINT fk_contest_participants_app_user
                                                            REFERENCES app_user,
                                                    contest_id BIGINT NOT NULL
                                                        CONSTRAINT fk_contest_participants_contest
                                                            REFERENCES contest ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS phase (
                                     contest_id BIGINT NOT NULL
                                         CONSTRAINT fk_phase_contest
                                             REFERENCES contest ON DELETE CASCADE,
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     start_date_time TIMESTAMP NOT NULL,
                                     end_date_time TIMESTAMP NOT NULL,
                                     type VARCHAR(255) NOT NULL,
                                     is_concluded BOOLEAN NOT NULL DEFAULT FALSE,
                                     CONSTRAINT phase_type_check CHECK (type IN ('PHASE_ONE', 'PHASE_TWO'))
);

CREATE TABLE IF NOT EXISTS photo_submission (
                                                contest_id BIGINT NOT NULL
                                                    CONSTRAINT fk_photo_submission_contest
                                                        REFERENCES contest ON DELETE CASCADE,
                                                creator_id BIGINT NOT NULL
                                                    CONSTRAINT fk_photo_submission_user_profile
                                                        REFERENCES user_profile,
                                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                story VARCHAR(5000) NOT NULL,
                                                photo_url VARCHAR(255) NOT NULL,
                                                title VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS photo_review (
                                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            category_mismatch BOOLEAN NOT NULL,
                                            is_reviewed BOOLEAN NOT NULL,
                                            score INTEGER NOT NULL CHECK (score >= 0 AND score <= 10),
                                            jury_id BIGINT NOT NULL
                                                CONSTRAINT fk_photo_review_jury
                                                    REFERENCES user_profile,
                                            photo_submission_id BIGINT NOT NULL
                                                CONSTRAINT fk_photo_review_photo_submission
                                                    REFERENCES photo_submission ON DELETE CASCADE,
                                            comment VARCHAR(5000) NOT NULL
);

-- Step 3: Insert roles
INSERT INTO roles (authority)
VALUES ('ADMIN'), ('USER'), ('MASTERUSER');

-- Step 4: Insert users
INSERT INTO app_user (username, password, email)
VALUES
    ('admin', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'admin@example.com'),
    ('admin1', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'admin1@example.com'),
    ('user1', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'john.doe@example.com'),
    ('user2', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'jane.doe@example.com'),
    ('user3', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'alex.smith@example.com'),
    ('user4', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'emily.jones@example.com'),
    ('user5', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'chris.brown@example.com'),
    ('masteruser1', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master1@example.com'),
    ('masteruser2', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master2@example.com'),
    ('masteruser3', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master3@example.com'),
    ('masteruser4', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master4@example.com'),
    ('masteruser5', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master5@example.com'),
    ('masteruser6', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master6@example.com'),
    ('masteruser7', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master7@example.com'),
    ('masteruser8', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'master8@example.com');

-- Step 5: Assign roles
INSERT INTO user_roles (user_id, role_id)
SELECT u.id, r.role_id
FROM app_user u, roles r
WHERE u.username IN ('admin', 'admin1') AND r.authority = 'ADMIN';

INSERT INTO user_roles (user_id, role_id)
SELECT u.id, r.role_id
FROM app_user u, roles r
WHERE u.username IN ('user1', 'user2', 'user3', 'user4', 'user5') AND r.authority = 'USER';

INSERT INTO user_roles (user_id, role_id)
SELECT u.id, r.role_id
FROM app_user u, roles r
WHERE u.username IN ('masteruser1', 'masteruser2', 'masteruser3', 'masteruser4', 'masteruser5', 'masteruser6', 'masteruser7', 'masteruser8') AND r.authority = 'MASTERUSER';

-- Step 6: Insert user profiles
INSERT INTO user_profile (id, first_name, last_name, rank)
VALUES
    ((SELECT id FROM app_user WHERE username = 'admin'), 'Adam', 'Adams', 'ORGANIZER'),
    ((SELECT id FROM app_user WHERE username = 'admin1'), 'Amanda', 'Adams', 'ORGANIZER'),
    ((SELECT id FROM app_user WHERE username = 'user1'), 'John', 'Doe', 'DICTATOR'),
    ((SELECT id FROM app_user WHERE username = 'user2'), 'Jane', 'Doe', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'user3'), 'Alex', 'Smith', 'ENTHUSIAST'),
    ((SELECT id FROM app_user WHERE username = 'user4'), 'Emily', 'Jones', 'ENTHUSIAST'),
    ((SELECT id FROM app_user WHERE username = 'user5'), 'Chris', 'Brown', 'JUNKIE'),
    ((SELECT id FROM app_user WHERE username = 'masteruser1'), 'Alice', 'Johnson', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser2'), 'Bob', 'Williams', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser3'), 'Cathy', 'Davis', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser4'), 'David', 'Miller', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser5'), 'Eve', 'Wilson', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser6'), 'Frank', 'Garcia', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser7'), 'Grace', 'Rodriguez', 'MASTER'),
    ((SELECT id FROM app_user WHERE username = 'masteruser8'), 'Hank', 'Martinez', 'MASTER');

-- Step 7: Insert contests with phases
-- Contest 1: Serenity of Nature (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Serenity of Nature', 'LANDSCAPE', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '3 days', now() + interval '6 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Serenity of Nature'), now(), now() + interval '1 day', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Serenity of Nature'), now() + interval '1 day', now() + interval '3 days', 'PHASE_TWO', FALSE);

-- Contest 2: Wildlife Wonders (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Wildlife Wonders', 'WILDLIFE', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '5 days', now() + interval '10 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Wildlife Wonders'), now(), now() + interval '2 days', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Wildlife Wonders'), now() + interval '2 days', now() + interval '5 days', 'PHASE_TWO', FALSE);

-- Contest 3: Urban Photography (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Urban Photography', 'STREET', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '4 days', now() + interval '8 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Urban Photography'), now(), now() + interval '3 days', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Urban Photography'), now() + interval '3 days', now() + interval '4 days', 'PHASE_TWO', FALSE);

-- Contest 4: Portraits of Emotion (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Portraits of Emotion', 'PORTRAIT', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '6 days', now() + interval '12 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Portraits of Emotion'), now(), now() + interval '2 days', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Portraits of Emotion'), now() + interval '2 days', now() + interval '6 days', 'PHASE_TWO', FALSE);

-- Contest 5: Nature's Serenity (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Nature''s Serenity', 'LANDSCAPE', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '7 days', now() + interval '14 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Nature''s Serenity'), now(), now() + interval '3 days', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Nature''s Serenity'), now() + interval '3 days', now() + interval '7 days', 'PHASE_TWO', FALSE);

-- Contest 6: Abstract Expressions (Active)
INSERT INTO contest (title, category, organizer_id, created_at, updated_at, start_date, submission_end_date, end_date)
VALUES ('Abstract Expressions', 'ABSTRACT', (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), now(), now(), now(), now() + interval '5 days', now() + interval '10 days');

INSERT INTO phase (contest_id, start_date_time, end_date_time, type, is_concluded)
VALUES ((SELECT id FROM contest WHERE title = 'Abstract Expressions'), now(), now() + interval '3 days', 'PHASE_ONE', FALSE),
       ((SELECT id FROM contest WHERE title = 'Abstract Expressions'), now() + interval '3 days', now() + interval '5 days', 'PHASE_TWO', FALSE);

-- Step 8: Insert participants for first 10 contests
INSERT INTO contest_participants (app_user_id, contest_id)
SELECT u.id, c.id FROM app_user u, contest c
WHERE u.username IN ('user1', 'user2', 'user3', 'user4', 'user5') AND c.id <= 6;

-- Step 9: Insert admin as jury for all contests
INSERT INTO contest_jury (app_user_id, contest_id)
SELECT (SELECT id FROM app_user WHERE username = 'admin'), c.id FROM contest c;

-- Step 10: Insert submissions for first 10 contests
-- Submissions for Contest 1
INSERT INTO photo_submission (contest_id, creator_id, story, photo_url, title)
SELECT c.id, u.id, 'A serene view of nature.', 'http://example.com/photo_' || u.username, 'Nature Photo ' || u.username
FROM contest c, app_user u WHERE c.title = 'Serenity''s Serenity' AND u.username IN ('user1', 'user2', 'user3', 'user4', 'user5');

-- Repeat similar submissions for other contests...

-- Step 11: Insert photo reviews by admin for all submissions
INSERT INTO photo_review (category_mismatch, is_reviewed, score, jury_id, photo_submission_id, comment)
SELECT FALSE, TRUE, FLOOR(RANDOM() * 10 + 1), (SELECT id FROM user_profile WHERE id = (SELECT id FROM app_user WHERE username = 'admin')), s.id, 'Great photo!'
FROM photo_submission s WHERE s.contest_id IN (SELECT id FROM contest WHERE id <= 6);

INSERT INTO photo_submission (creator_id, contest_id, title, story, photo_url)
VALUES
    (2, 1, 'Sunset over the hills', 'A beautiful sunset taken from the hills.', 'https://res.cloudinary.com/dzrqfix7k/image/upload/v1726137146/samples/landscapes/nature-mountains.jpg'),
    (3, 1, 'Cityscape', 'An evening cityscape with the skyline.', 'https://res.cloudinary.com/dzrqfix7k/image/upload/v1726137145/samples/landscapes/beach-boat.jpg'),
    (4, 1, 'Mountain Peak', 'The summit of a snowy mountain.', 'https://res.cloudinary.com/dzrqfix7k/image/upload/v1726137144/samples/sheep.jpg'),
    (5, 1, 'Forest Path', 'A serene path through the forest.', 'https://res.cloudinary.com/dzrqfix7k/image/upload/v1726137144/samples/animals/reindeer.jpg'),
    (6, 1, 'Beach Waves', 'Waves crashing onto the beach.', 'https://res.cloudinary.com/dzrqfix7k/image/upload/v1726137143/samples/animals/cat.jpg');
