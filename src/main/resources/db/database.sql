DROP TABLE IF EXISTS public.photo_review CASCADE;
DROP TABLE IF EXISTS public.photo_submission CASCADE;
DROP TABLE IF EXISTS public.contest_participants CASCADE;
DROP TABLE IF EXISTS public.contest_jury CASCADE;
DROP TABLE IF EXISTS public.phase CASCADE;
DROP TABLE IF EXISTS public.contest CASCADE;
DROP TABLE IF EXISTS public.user_profile CASCADE;
DROP TABLE IF EXISTS public.user_roles CASCADE;
DROP TABLE IF EXISTS public.roles CASCADE;
DROP TABLE IF EXISTS public.app_user CASCADE;

CREATE TABLE IF NOT EXISTS app_user
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS roles
(
    role_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    authority VARCHAR(255) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS user_roles
(
    role_id INTEGER NOT NULL
    CONSTRAINT fk_user_roles_roles
    REFERENCES roles,
    user_id BIGINT  NOT NULL
    CONSTRAINT fk_user_roles_app_user
    REFERENCES app_user,
    PRIMARY KEY (role_id, user_id)
    );

CREATE TABLE public.user_profile
(
    id         BIGINT       NOT NULL
        PRIMARY KEY
        CONSTRAINT fk_user_profile_app_user
            REFERENCES public.app_user (id),
    first_name VARCHAR(26),
    last_name  VARCHAR(26),
    rank       VARCHAR(255) NOT NULL
        CONSTRAINT user_profile_rank_check
            CHECK ((rank)::text = ANY
        (ARRAY ['JUNKIE'::text, 'ENTHUSIAST'::text, 'MASTER'::text, 'DICTATOR'::text, 'ORGANIZER'::text])),
    points     INTEGER DEFAULT 0
);

CREATE TABLE IF NOT EXISTS contest
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title        VARCHAR(255),
    category     VARCHAR(255),
    is_private   BOOLEAN NOT NULL DEFAULT FALSE,

    CONSTRAINT contest_category_check
    CHECK ((category)::TEXT = ANY
(ARRAY [
('LANDSCAPE'::character varying)::TEXT,
('PORTRAIT'::character varying)::TEXT,
('STREET'::character varying)::TEXT,
('WILDLIFE'::character varying)::TEXT,
('ABSTRACT'::character varying)::TEXT
    ])
    ),

    organizer_id BIGINT,
    FOREIGN KEY (organizer_id) REFERENCES user_profile (id),

    created_at   TIMESTAMP,
    updated_at   TIMESTAMP,
    start_date   TIMESTAMP,
    submission_end_date   TIMESTAMP,
    end_date     TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS contest_jury
(
    app_user_id BIGINT NOT NULL
    CONSTRAINT fk4qk84m8cfofr3n94sxcdkqisx
    REFERENCES app_user,
    contest_id  BIGINT NOT NULL
    CONSTRAINT fkin13dngkirloewxhmwup63ru3
    REFERENCES contest
);

CREATE TABLE IF NOT EXISTS contest_participants
(
    app_user_id BIGINT NOT NULL
    CONSTRAINT fkiegpoaqf7x6o2ikg2qosmw4fd
    REFERENCES app_user,
    contest_id  BIGINT NOT NULL
    CONSTRAINT fkscq5updfr2dg1lliqs7jn9b8k
    REFERENCES contest
);

CREATE TABLE IF NOT EXISTS phase
(
    contest_id      BIGINT       NOT NULL
    CONSTRAINT fkerf0b63ljn6gmyrwbj59ss3xj
    REFERENCES contest,
    end_date_time   TIMESTAMP    NOT NULL,
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date_time TIMESTAMP    NOT NULL,
    type            VARCHAR(255) NOT NULL
    CONSTRAINT phase_type_check
    CHECK ((type)::TEXT = ANY
(ARRAY [('PHASE_ONE'::CHARACTER VARYING)::TEXT,
('PHASE_TWO'::CHARACTER VARYING)::TEXT
    ])),
    is_concluded    BOOLEAN      NOT NULL DEFAULT FALSE
    );

CREATE TABLE IF NOT EXISTS photo_submission
(
    contest_id BIGINT        NOT NULL
    CONSTRAINT fk5hrhv0v7taudvhdblbcltxa0q
    REFERENCES contest,
    creator_id BIGINT        NOT NULL
    CONSTRAINT fksyhreqese5oa357jomm3ak8xn
    REFERENCES user_profile,
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    story      VARCHAR(5000) NOT NULL,
    photo_url  VARCHAR(255)  NOT NULL,
    title      VARCHAR(255)  NOT NULL
    );

CREATE TABLE IF NOT EXISTS photo_review
(
    category_mismatch   BOOLEAN       NOT NULL,
    is_reviewed         BOOLEAN       NOT NULL,
    score               INTEGER       NOT NULL
    CONSTRAINT photo_review_score_check
    CHECK ((score >= 1) AND (score <= 10)),
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    jury_id             BIGINT        NOT NULL
    CONSTRAINT fkdjbta6vwrx8etkgdpqnl25nw4
    REFERENCES user_profile,
    photo_submission_id BIGINT        NOT NULL
    CONSTRAINT fkmnnhvdnh20rfv6uhy0m3h2r0j
    REFERENCES photo_submission,
    comment             VARCHAR(5000) NOT NULL
    );

INSERT INTO public.roles (authority)
VALUES ('ADMIN'),
       ('USER'),
       ('MASTERUSER');

-- Insert a new user
-- Step 1: Insert the user
INSERT INTO "app_user" (username, password, email)
VALUES ('admin', '$2a$10$fn/K6upEvwqz9ndoGgEVr.kjL0TsDsX4qvJmYNvvDg1Cgf34dR.LS', 'admina@example.com');

-- Step 2: Assign the ADMIN role to the new user
INSERT INTO user_roles (user_id, role_id)
SELECT u.id, r.role_id
FROM "app_user" u,
     roles r
WHERE u.username = 'admin'
  AND r.authority = 'ADMIN';

INSERT INTO user_profile (id, first_name, last_name, rank)
SELECT u.id, 'Admin', 'User', 'ORGANIZER'
FROM app_user u
WHERE u.username = 'admin';
