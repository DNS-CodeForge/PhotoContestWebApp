DROP TABLE IF EXISTS public.photo_review CASCADE;
DROP TABLE IF EXISTS public.photo_submission CASCADE;
DROP TABLE IF EXISTS public.contest_participants CASCADE;
DROP TABLE IF EXISTS public.contest_jury CASCADE;
DROP TABLE IF EXISTS public.phase CASCADE;
DROP TABLE IF EXISTS public.contest CASCADE;
DROP TABLE IF EXISTS public.user_profile CASCADE;
DROP TABLE IF EXISTS public.user_roles CASCADE;
DROP TABLE IF EXISTS public.roles CASCADE;
DROP TABLE IF EXISTS public.app_user CASCADE;

create table if not exists app_user
(
    id       bigint generated by default as identity
    primary key,
    email    varchar(255) not null
    unique,
    password varchar(255) not null,
    username varchar(255) not null
    unique
    );



create table if not exists roles
(
    role_id   integer generated by default as identity
    primary key,
    authority varchar(255) not null
    unique
    );



create table if not exists user_roles
(
    role_id integer not null
    constraint fk_user_roles_roles
    references roles,
    user_id bigint  not null
    constraint fk_user_roles_app_user
    references app_user,
    primary key (role_id, user_id)
    );


CREATE TABLE public.user_profile
(
    id         BIGINT NOT NULL
        PRIMARY KEY
        CONSTRAINT fk_user_profile_app_user
            REFERENCES public.app_user(id),
    first_name VARCHAR(26),
    last_name  VARCHAR(26),
    rank       VARCHAR(255) NOT NULL
        CONSTRAINT user_profile_rank_check
            CHECK ((rank)::text = ANY (ARRAY ['JUNKIE'::text, 'ENTHUSIAST'::text, 'ORGANISER'::text, 'MASTER'::text]))
    );




CREATE TABLE IF NOT EXISTS contest
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title                  VARCHAR(255),
    category               VARCHAR(255)
    CONSTRAINT contest_category_check
    CHECK ((category)::TEXT = ANY
(ARRAY [('LANDSCAPE'::character varying)::TEXT,
('PORTRAIT'::character varying)::TEXT,
('STREET'::character varying)::TEXT,
('WILDLIFE'::character varying)::TEXT,
('ABSTRACT'::character varying)::TEXT])),
    organizer_id           BIGINT
    CONSTRAINT fk7v73ododrqogsbtamlpr65jne
    REFERENCES user_profile,
    phase_id               BIGINT,
    created_at             TIMESTAMP(6),
    updated_at             TIMESTAMP(6),
    start_date             TIMESTAMP(6),
    end_date               TIMESTAMP(6)
    );


create table if not exists contest_jury
(
    app_user_id bigint not null
    constraint fk4qk84m8cfofr3n94sxcdkqisx
    references app_user,
    contest_id  bigint not null
    constraint fkin13dngkirloewxhmwup63ru3
    references contest
);



create table if not exists contest_participants
(
    app_user_id bigint not null
    constraint fkiegpoaqf7x6o2ikg2qosmw4fd
    references app_user,
    contest_id  bigint not null
    constraint fkscq5updfr2dg1lliqs7jn9b8k
    references contest
);


create table if not exists phase
(
    contest_id      bigint       not null
    constraint fkerf0b63ljn6gmyrwbj59ss3xj
    references contest,
    end_date_time   timestamp(6) not null,
    id              bigint generated by default as identity
    primary key,
    start_date_time timestamp(6) not null,
    type            varchar(255) not null
    constraint phase_type_check
    check ((type)::text = ANY
(ARRAY [('PHASE_ONE'::character varying)::text, ('PHASE_TWO'::character varying)::text, ('FINISHED'::character varying)::text]))
    );



alter table contest
    add constraint fk4f31xvkb6odejpq70n76mbaq9
        foreign key (phase_id) references phase;

create table if not exists photo_submission
(
    contest_id bigint        not null
    constraint fk5hrhv0v7taudvhdblbcltxa0q
    references contest,
    creator_id bigint        not null
    constraint fksyhreqese5oa357jomm3ak8xn
    references user_profile,
    id         bigint generated by default as identity
    primary key,
    story      varchar(5000) not null,
    photo_url  varchar(255)  not null,
    title      varchar(255)  not null
    );


create table if not exists photo_review
(
    category_mismatch   boolean       not null,
    is_reviewed         boolean       not null,
    score               integer       not null
    constraint photo_review_score_check
    check ((score >= 1) AND (score <= 10)),
    id                  bigint generated by default as identity
    primary key,
    jury_id             bigint        not null
    constraint fkdjbta6vwrx8etkgdpqnl25nw4
    references user_profile,
    photo_submission_id bigint        not null
    constraint fkmnnhvdnh20rfv6uhy0m3h2r0j
    references photo_submission,
    comment             varchar(5000) not null
    );


INSERT INTO public.roles (authority)
VALUES ('ADMIN'),
       ('USER');

